head(df, 6)
df$mpg.mean()
summary(df)
df$mpg.mean()
mean(df$mpg)
subset(df, cyl==6)
df[,c('am','gear','carb')]
df$performance <- df$hp / df$wt
head(df)
?round
df$performance <- round(df$hp / df$wt, 2)
head(df)
con <- subset(df,hp>100 & wt>2.5)
con
mean(con$mpg)
df['Hornet Sportabout','mpg']
v <- c(1,2,3)
a <- matrix(1:25, nrow = 2)
a <- matrix(1:25, nrow = 5)
b <- mtcars
y <- list(v,a,b)
y
myname.list <- list(sample_vec=v, my.matrix=a, sample.df=b)
myname.list
install.packages('rvest')
install.packages('rvest')
library(rvest)
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
logo_movie%>%
logo_movie%>%
html_node('strong span')
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
logo_movie%>%
html_node('strong span')
logo_movie%>%
html_node('strong span')%>%
logo_movie%>%
html_node('strong span')%>%
as.numeric()
logo_movie%>%
html_node('strong span')%>%
as.numeric()
lego_movie%>%
html_node('strong span')%>%
as.numeric()
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
lego_movie%>%
html_node('strong span')%>%
as.numeric()
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
lego_movie%>%
html_node('strong span')%>%
as.numeric()
lego_movie%>%
html_node('strong span')%>%
html_text()%>%
as.numeric()
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
lego_movie%>%
html_node('strong span')%>%
html_text()%>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie%>%
html_nodes('strong span')%>%
html_text()%>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie <- read_html('http://www.imdb.com/title/tt1490017/')
lego_movie
lego_movie%>%
html_nodes('strong span')%>%
html_text()%>%
as.numeric()
a <- c(20,30,30)
if(10>a){
print('hello world')
}else if(20 == a){
print('majorie')
}else{
print('always with me')
}
temp <- 45
if(temp<45){
print('wether is cold')
}else if(temp >45){
print('wether too hot')
}else if(temp == 45){
print('better wether')
}else{
print('i dont understand wether')
}
ham <- 10
cheese <- 10
report <- 'blank'
if(ham>=10 & cheese >=10){
report <- 'strong sales of both cheese and ham'
}else if(ham == 0 & cheese == 0){
report <- 'poor sales today'
}else{
print('walaaaaa')
}
report
x <- 1
if(x == 1){
print('hello')
}
#Ex 1: Write a script that will print "Even Number" if
#the variable x is an even number, otherwise print "Not Even":
x <- 3
if (x %% 2 == 0){
print('even number')
}else if(x %% 2 != 0){
print('not even number')
}
y <- matrix(1:25, nrow = 5)
y <- matrix(1:25, nrow = 5)
if(is.matrix(y)){
print('Is a Matrix')
}else{
print('Not a Matrix')
}
x <- c(1:3)
?asc
?c()
print(paste('hello', name))
hello <- function(name){
print(paste('hello', name))
}
hello('Sammy')
hello <- function(name='Ayisha'){
#code that execute when function is called
print(paste('hello', name))
}
hello()
add_num(4,6)
add_num <- function(num1,num2){
print(num1 + num2)
}
add_num <- function(num1,num2){
print(num1 + num2)
}
add_num(4,6)
add_num <- function(num1,num2){
my.sum <- num1 + num2
return(my.sum)
}
add_num(4,6)
result <- add_num(4,6)
times5 <- function(num){
return(num * 5)
}
print(times5(20))
times5 <- function(num){
my.result <- num * 5
return(my.result)
}
my.output <- times5(100)
print(my.output)
my.result
fun(stuff)
v <- 'i am a global variable'
stuff <- 'i am global stuff'
fun <- function(stuff){
print(v)
stuff <- 'Reassign stuff inside of this function fun'
print(stuff)
}
fun(stuff)
myname <- function(name){
print(paste('Hello',name))
}
myname('Hudu')
heudu <- function(name){
hudu <- paste('Hello', name)
return(hudu)
}
heudu('Hudu')
prod <- function(num1,num2){
tyms <- num1 * num2
return(tyms)
}
prod(4,6)
a <-2
b <- c(2,3,4,5)
myfunc <- function(a,b){
for (i in b) {
if(i == a){
return(TRUE)
}else{
return(F)
}
}
}
myfunc <- function(a,b){
for (i in b) {
if(i == a){
return(TRUE)
}else{
return(F)
}
}
}
myfunc(a=2,b=c(2,4,5))
myfunc(a=2,b=c(6,4,5))
secfunc(a=2, b=c(2,2,2,3,5,2))
secfunc <- function(a,b){
count <- 0
for (i in b) {
if(i == a){
count + 1
}
return(count)
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
secfunc <- function(a,b){
count <- 0
for (i in b) {
if(i == a){
count + 1
return(count)
}
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
count <- 0
secfunc <- function(a,b){
for (i in b) {
if(i == a){
count + 1
return(count)
}
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
count <- 0
secfunc <- function(a,b){
for (i in b) {
if(i == a){
count <- count + 1
return(count)
}
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
count <- 0
secfunc <- function(a,b){
for (i in b) {
if(i == a){
count <- count + 1
}
return(count)
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
secfunc <- function(a,b){
count <- 0
for (i in b) {
if(i == a){
count <- count + 1
}
return(count)
}
}
secfunc(a=2, b=c(2,2,2,3,5,2))
secfunc <- function(a,b){
count <- 0
for (i in b) {
if(i == a){
count <- count + 1
}
}
return(count)
}
secfunc(a=2, b=c(2,2,2,3,5,2))
print(4%%1)
print(1%%4)
print(19%%5)
print(19 // 5)
print(19 / 5)
print(19 %% 5)
print(19/5)
round(print(19/5))
floor(print(19/5))
floor(print(4/5))
print(4/1)
print(3/1)
number_of_bars(20)
number.of.mybars <- 0
number_of_bars <- function(numb){
true.5 <- floor(numb/5)
if(true.5 == 0){
number.of.mybars <- numb / 1
return(number.of.mybars)
}else if(true.5 != 0){
number.of.mybars <- true.5
remainder <- numb %% 5
number.of.hearbars <- remainder / 1
number.of.mybars <- number.of.mybars +  number.of.hearbars
return(number.of.mybars)
}
}
number_of_bars(20)
number_of_bars(21)
number_of_bars(6)
number_of_bars(7)
number_of_bars(17)
allfunc()
a <- c(3,4,5)
allfunc <- function(a){
out <- c(0)
for (i in a) {
if(i%%3 != 0){
out <- append(a,out)
}
}
sum(out)
}
allfunc()
a <- c(3,4,5)
allfunc <- function(a){
out <- c(0)
for (i in a) {
if(i%%3 != 0){
out <- append(a,out)
}
}
sum(out)
}
allfunc()
allfunc(a=c(1,2,3,4,5,6))
a <- c(3,4,5)
allfunc <- function(a){
out <- c(0)
for (i in a) {
if(i%%3 != 0){
out <- append(a,out)
}
}
sum(out)
}
allfunc(a=c(1,2,3,4,5,6))
allfunc <- function(a,b,b){
out <- c(0)
if(a%%3 != 0){
out <- append(a,out)
}
if(b%%3 !=0){
out <- append(b,out)
}
if(c%%3 != 0){
out <- append(c, out)
}
sum(out)
}
allfunc(3,4,5)
allfunc <- function(a,b,b){
out <- c(0)
if(a%%3 != 0){
out <- append(a,out)
}
if(b%%3 !=0){
out <- append(b,out)
}
if(c%%3 != 0){
out <- append(c, out)
}
sum(out)
}
return(sum(out))
allfunc <- function(a,b,b){
out <- c(0)
if(a%%3 != 0){
out <- append(a,out)
}
if(b%%3 !=0){
out <- append(b,out)
}
if(c%%3 != 0){
out <- append(c, out)
}
return(sum(out))
}
allfunc(3,4,5)
print(allfunc(3,4,5))
allfunc <- function(a,b,c){
out <- c(0)
if(a%%3 != 0){
out <- append(a,out)
}
if(b%%3 !=0){
out <- append(b,out)
}
if(c%%3 != 0){
out <- append(c, out)
}
return(sum(out))
}
print(allfunc(3,4,5))
prime_check <- function(numb){
if(numb/2 == 0){
return(F)
}else{
return(T)
}
}
prime_check(4)
if(numb %%2 == 0){
return(F)
}else{
return(T)
}
prime_check <- function(numb){
if(numb %%2 == 0){
return(F)
}else{
return(T)
}
}
prime_check(4)
prime_check(5)
prime_check(3)
prime_check(8)
seq(0,100, by=2)
seq(0,100, by=10)
sequence(0,200,by=20)
seq(0,24,by=2)
v <- c(1,4,5,6,82,5,6)
sort(v)
sort(v, decreasing = T)
cv <- c('b','d','a')
sort(cv)
#3. reversing
rev(v)
rev(cv)
str(mtcars)
#5. summary
summary(mtcars)
#6. append
v <- c(1:10)
va <- c(21:30)
append(v, va)
is.vector(v)
#converting one data type to another
as.list(v)
a <- sample(x = 1:10,1)
a
a
a <- sample(x = 1:10,1)
a
a <- sample(x = 1: 50,3)
a
v <- c(1:5)
addrand <- function(x){
ran <- sample(1:100,1)
return(x + ran)
}
addrand(10)
lapply(v, addrand)
result <- lapply(v, addrand)
result
result <- sapply(v, addrand)
result
v <- 1:5
times2 <- function(num){
return(num*2)
}
result <- sapply(v, times2)
result
v <- 1:5
result <- sapply(v, function(num){num*2})
result
add_choise <- function(num, choise){
return(num +choise)
}
sapply(v , add_choise)
text <- "hi there, do you know who you are voting for"
grepl('voting', 'text')
grepl('dog', text)
grepl("voting", 'text')
grepl("voting", text)
grepl('dog', text)
v <- c('a','b','c','d')
grepl('b', v)
grep('b',v)
grep('-','21-02-19')
today <- Sys.Date()
today
class(today)
install.packages('dplyr')
install.packages('dplyr')
installed.packages('nycflights13')
installed.packages('nycflights13')
library(dplyr)
install.packages('dplyr')
installed.packages('nycflights13')
library(dplyr)
